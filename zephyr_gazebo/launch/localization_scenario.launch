<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="disaster"/>
  <!--arg name="world_name" default="indoor_asphalt"/-->
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/Media/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/Media/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="paused" value="true"/>
  </include>

  <!-- Publish fake laser messages-->
  <!--include file="$(find zephyr_navigation)/launch/zephyr_pc_scan.launch"/-->

  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_kinect.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <!-- Remap kinect transforms-->
      <!--remap from="odometry" to="/firefly/odometry_sensor1/odometry"/-->
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <!-- Odometry sources: 1.True odometry: /firefly/odometry_sensor1/odometry 2.UKF fixed: /firefly/odom_fused 3.UKF: /odometry/filtered -->
      <remap from="odometry" to="/firefly/odom_fused"/> 
    </node>
    <node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>
    <node name="waypoint_publisher_file" pkg="rotors_gazebo" type="waypoint_publisher_file" output="screen" args="$(find zephyr_gazebo)/resource/scenario_waypoints3.txt"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find zephyr_gazebo)/resource/rviz/firefly_with_kinect.rviz" />
  </group>

  <!-- Start Mapping -->
  <include file="$(find zephyr_mapping)/launch/gmapping.launch"/>

  <!-- Publish scanmatch odom messages-->
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">

    <!--remap from="world" to="odom"/-->
    <!-- Frame names -->
    <param name="map_frame" value="world" />
    <param name="base_frame" value="firefly/base_link" />
    <param name="odom_frame" value="world" />
    
    <!-- Tf use -->
    <param name="pub_map_odom_transform" value="false"/>
    <param name="pub_map_scanmatch_transform" value="false"/>
    <param name="pub_odometry" value="true"/>
    
    <!-- Map size / start point -->
    <param name="map_resolution" value="0.050"/>
    <param name="map_size" value="2048"/>
    <param name="map_multi_res_levels" value="2" />
    
    <!-- Map update parameters -->
    <param name="map_update_angle_thresh" value="0.06" />
    
    <!-- Advertising config --> 
    <param name="scan_topic" value="/firefly/scan"/>
    <remap from="map" to="hector_map"/>
  </node>

  <!-- Publish air pressure sensor --> 
  <node pkg="zephyr_localization" type="air_pressure_publisher.py" name="air_pressure_publisher">

  </node>

  <!-- Publish localization -->
  <node pkg="zephyr_localization" type="ukf_fixer.py" name="zephyr_localization">
    
  </node>

  <!-- Launch UKF -->
  <include file="$(find zephyr_localization)/launch/ukf.launch"/>

</launch>
